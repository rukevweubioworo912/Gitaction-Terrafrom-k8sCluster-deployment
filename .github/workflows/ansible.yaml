name: Deploy K8s Cluster with Bash Scripts

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      MASTER_IP: 13.223.77.209
      WORKER_IPS: '["3.86.11.156", "50.17.11.136"]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan $MASTER_IP $(echo "$WORKER_IPS" | jq -r '.[]') >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Copy master setup script from ansible folder
        run: |
          cp k8Cluster/Ansible/master.sh ./master.sh
          chmod +x ./master.sh

      - name: Run master setup on EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ./master.sh ec2-user@$MASTER_IP:/home/ec2-user/master.sh
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@$MASTER_IP \
            "chmod +x ~/master.sh && sudo ~/master.sh"

      - name: Retrieve join command from master
        id: get_join
        run: |
          JOIN_CMD=$(ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@$MASTER_IP \
            "cat ~/kubeadm-join-command.sh" 2>/dev/null || echo "")
          if [ -z "$JOIN_CMD" ]; then
            echo "❌ Failed to retrieve join command!"
            exit 1
          fi
          echo "JOIN_CMD=$JOIN_CMD" >> $GITHUB_OUTPUT
          echo "✅ Retrieved join command: $JOIN_CMD"

      - name: Copy worker setup script from ansible folder
        run: |
          cp k8Cluster/Ansible/worker.sh ./worker.sh
          chmod +x ./worker.sh

      - name: Deploy and run worker setup on all workers
        run: |
          JOIN_CMD='${{ steps.get_join.outputs.JOIN_CMD }}'
          for ip in $(echo "$WORKER_IPS" | jq -r '.[]'); do
            echo "🔧 Deploying to worker: $ip"
            scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ./worker.sh ec2-user@$ip:/home/ec2-user/worker.sh
            ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@$ip \
              "chmod +x ~/worker.sh && ~/worker.sh '$JOIN_CMD'"
          done

      - name: Verify Kubernetes cluster nodes
        run: |
          echo "⏳ Waiting for all nodes to be Ready..."
          MASTER_IP="$MASTER_IP"
          until ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@$MASTER_IP \
            "kubectl get nodes 2>/dev/null | grep -q 'Ready'" ; do
            echo "👉 Nodes not ready yet... waiting 10s"
            sleep 10
          done
          echo "✅ Cluster is ready!"
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@$MASTER_IP "kubectl get nodes"