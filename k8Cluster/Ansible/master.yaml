---
- hosts: master
  become: yes
  vars:
    kube_version: "1.29"
  tasks:
    - name: Update system and install base packages
      yum:
        name:
          - curl
          - vim
          - git
          - docker
        state: present
        update_cache: yes
      notify: Start Docker

    - name: Enable and start Docker
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Disable SELinux
      selinux:
        state: permissive
        policy: targeted

    - name: Add Kubernetes repository
      copy:
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/rpm/repodata/repomd.xml.key
          exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
        dest: /etc/yum.repos.d/kubernetes.repo

    - name: Install kubelet, kubeadm, kubectl
      yum:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        enablerepo: kubernetes
        disable_excludes: kubernetes

    - name: Enable and start kubelet
      systemd:
        name: kubelet
        enabled: yes
        state: started

    - name: Initialize Kubernetes cluster if not already done
      shell: |
        kubeadm init \
          --apiserver-advertise-address={{ ansible_default_ipv4.address }} \
          --pod-network-cidr=192.168.0.0/16 \
          --ignore-preflight-errors=FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_init
      when: not inventory_hostname in groups['workers']

    - name: Create .kube directory for ec2-user
      file:
        path: /home/ec2-user/.kube
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Copy admin.conf to ec2-user's .kube/config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ec2-user/.kube/config
        remote_src: yes
        owner: ec2-user
        group: ec2-user
        mode: '0644'

    - name: Set kubectl context for ec2-user
      shell: |
        export KUBECONFIG=/home/ec2-user/.kube/config
        kubectl get nodes
      become_user: ec2-user

    - name: Install Calico CNI
      shell: |
        curl -sL https://raw.githubusercontent.com/projectcalico/calico/v3.29.0/manifests/calico.yaml | kubectl apply -f -
      become_user: ec2-user
      register: calico_applied
      until: calico_applied is succeeded
      retries: 5
      delay: 10
      when: calico_applied is not succeeded or calico_applied is failed

    - name: Get kubeadm join command
      shell: kubeadm token create --print-join-command
      register: join_command
      changed_when: false

    - name: Expose join command as fact
      set_fact:
        kubeadm_join_command: "{{ join_command.stdout }}"

    - name: Save join command to local file (for GitHub Actions to pick up)
      delegate_to: localhost
      copy:
        content: "{{ join_command.stdout }}"
        dest: "/tmp/kubeadm_join_command.sh"
        mode: 0755